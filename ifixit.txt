-- Create the database
CREATE DATABASE ifixit;
USE ifixit;

-- Table for admins
CREATE TABLE `admin` (
  `admin_id` INT(11) NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(50) NOT NULL,
  `first_name` VARCHAR(100),
  `last_name` VARCHAR(100),
  `password` VARCHAR(255),
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`admin_id`),
  UNIQUE KEY `username` (`username`)
);

-- Table for employees
CREATE TABLE `employee` (
  `employee_id` INT(11) NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(100),
  `last_name` VARCHAR(100),
  `email` VARCHAR(255),
  `phone_number` VARCHAR(20),
  `address` VARCHAR(255),
  `date_of_birth` DATE,
  `schedule_time` VARCHAR(50),
  `schedule_days` TEXT,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`employee_id`)
);

-- Table for customers
CREATE TABLE `customer` (
  `customer_id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `email` VARCHAR(255),
  `phone_number` VARCHAR(20),
  `address` VARCHAR(255),
  `gender` ENUM('Male','Female','Other'),
  `employee_id` INT(11),
  PRIMARY KEY (`customer_id`),
  FOREIGN KEY (`employee_id`) REFERENCES `employee` (`employee_id`)
);

-- Table for devices
CREATE TABLE `device` (
  `device_id` INT(11) NOT NULL AUTO_INCREMENT,
  `brand` VARCHAR(255),
  `model` VARCHAR(255),
  `issue_description` TEXT,
  `date_brought_in` DATE,
  `customer_id` INT(11),
  PRIMARY KEY (`device_id`),
  FOREIGN KEY (`customer_id`) REFERENCES `customer` (`customer_id`)
);

-- Table for feedback
CREATE TABLE `feedback` (
  `feedback_id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `feedback_text` TEXT,
  `rating` INT(11),
  `image_data` LONGBLOB,
  `image_name` VARCHAR(255),
  `image_type` VARCHAR(255),
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`feedback_id`)
);

-- Table for positions
CREATE TABLE `position` (
  `position_id` INT(11) NOT NULL AUTO_INCREMENT,
  `position_name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`position_id`)
);

-- Table for repair assignments
CREATE TABLE `repairassignment` (
  `repair_id` INT(11) NOT NULL AUTO_INCREMENT,
  `emp_first_name` VARCHAR(100),
  `emp_last_name` VARCHAR(100),
  `device_id` INT(11),
  `repair_status` ENUM('In Progress','Completed','Pending'),
  `repair_date` DATE,
  `pickup_date` DATE,
  `notes` TEXT,
  PRIMARY KEY (`repair_id`),
  FOREIGN KEY (`device_id`) REFERENCES `device` (`device_id`)
);

-- Table for appointments
CREATE TABLE `appointment` (
  `appointment_id` INT(11) NOT NULL AUTO_INCREMENT,
  `customer_id` INT(11),
  `customer_name` VARCHAR(255),
  `customer_email` VARCHAR(255),
  `appointment_date` DATE,
  `appointment_time` TIME,
  `employee_id` INT(11),
  `employee_name` VARCHAR(255),
  `status` VARCHAR(20),
  `drop_off_date` DATE,
  PRIMARY KEY (`appointment_id`),
  FOREIGN KEY (`customer_id`) REFERENCES `customer` (`customer_id`),
  FOREIGN KEY (`employee_id`) REFERENCES `employee` (`employee_id`)
);

-- Table for transactions
CREATE TABLE `transaction` (
  `transaction_id` INT(11) NOT NULL AUTO_INCREMENT,
  `customer_id` INT(11),
  `date_paid` DATE,
  `payment_type` ENUM('Cash','Credit Card','Debit Card','Online Payment'),
  `employee_id` INT(11),
  `total_amount` DECIMAL(10,2),
  `repair_status` ENUM('In Progress','Completed','Pending'),
  PRIMARY KEY (`transaction_id`),
  FOREIGN KEY (`customer_id`) REFERENCES `customer` (`customer_id`),
  FOREIGN KEY (`employee_id`) REFERENCES `employee` (`employee_id`)
);
